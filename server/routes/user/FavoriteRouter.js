const express = require('express');

const router = express.Router();

const { info } = require('../../log-config');
const Database = require('../../Database');

const SELECT_USER_FAVORITE_LIST = `
  SELECT 
    GBP.TITLE AS postTitle
    , GUF.POST_ID AS postId
    , DATE_FORMAT(GBP.CRT_DTTM, '%Y-%m-%d %H:%i:%s') AS postDate
    , GUF.CRT_DTTM AS favoriteDate
    , GBP.VIEW_CNT AS postViews
  FROM 
    GTC_USER_FAVORITE GUF 
    LEFT JOIN GTC_POST GBP
    ON GUF.POST_ID = GBP.ID
  WHERE GUF.USER_ID = :USER_ID
  ORDER BY GUF.CRT_DTTM DESC
`;

const SELECT_USER_FAVORITE = `
  SELECT 
    * 
  FROM GTC_USER_FAVORITE
  WHERE 
    USER_ID = :USER_ID 
    AND POST_ID = :POST_ID
`;

const INSERT_USER_FAVORITE = `
  INSERT INTO GTC_USER_FAVORITE (
    USER_ID
    , POST_ID
    , CRT_DTTM
  ) VALUES (
    :USER_ID
    , :POST_ID
    , SYSDATE()
  )
`;

const DELETE_USER_FAVORITE = `
  DELETE FROM GTC_USER_FAVORITE
  WHERE 
    POST_ID = :POST_ID 
    AND USER_ID = :USER_ID
`;

// Ïö∞ÏÑ†ÏùÄ Ïñ¥Ï∞®Ìîº Ìè¨Ïä§Ìä∏Îßå Ï¶êÍ≤®Ï∞æÍ∏∞ ÎåÄÏÉÅÏù¥Í∏∞ ÎïåÎ¨∏Ïóê Î£®Ìä∏Î°úÎßå ÎùºÏö∞ÌåÖ. Ï∂îÍ∞ÄÏ†ÅÏúºÎ°ú ÏÉùÍ∏∞Î©¥ ÏßÑÌñâ.
router.get('/', (req, res) => {
  const { userId } = req.query;

  Database.execute(
    (database) => database.query(
      SELECT_USER_FAVORITE_LIST,
      {
        USER_ID: userId,
      },
    )
      .then((rows) => {
        res.json({
          success: true,
          code: 1,
          message: 'Ï¶êÍ≤®Ï∞æÍ∏∞ Î™©Î°ù Ï°∞Ìöå',
          result: rows,
        });
      }),
  ).then(() => {
    info('[SELECT, GET /api/user/favorite] Ïú†Ï†Ä Ï¶êÍ≤®Ï∞æÍ∏∞ Î™©Î°ù Ï°∞Ìöå');
  });
});

router.post('/', (req, res) => {
  const data = req.body;
  const { userId, bpId } = data;

  Database.execute(
    (database) => database.query(
      SELECT_USER_FAVORITE,
      {
        USER_ID: userId,
        POST_ID: parseInt(bpId, 10),
      },
    )
      .then((rows) => {
        if (rows.length >= 1) {
          res.json({
            success: true,
            code: 2,
            message: 'üòì Ïù¥ÎØ∏ Ï¶êÍ≤®Ï∞æÍ∏∞Îêú Í≤åÏãúÎ¨ºÏûÖÎãàÎã§.',
          });
          throw new Error('Ïù¥ÎØ∏ Ï¶êÍ≤®Ï∞æÍ∏∞Îêú Í≤åÏãúÎ¨ºÏûÖÎãàÎã§.');
        } else {
          return database.query(
            INSERT_USER_FAVORITE,
            {
              USER_ID: userId,
              POST_ID: parseInt(bpId, 10),
            },
          );
        }
      })
      .then(() => {
        res.json({
          success: true,
          code: 1,
          message: 'üòä Ï¶êÍ≤®Ï∞æÍ∏∞Ïóê Ìï¥Îãπ Í≤åÏãúÎ¨ºÏù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.',
        });
      }),
  ).then(() => {
    info('[INSERT, POST /api/user/favorite] Ïú†Ï†Ä Ï¶êÍ≤®Ï∞æÍ∏∞ Ï∂îÍ∞Ä');
  });
});

router.delete('/', (req, res) => {
  const data = req.body;
  const { bpId, userId } = data;

  Database.execute(
    (database) => database.query(
      DELETE_USER_FAVORITE,
      {
        USER_ID: userId,
        POST_ID: bpId,
      },
    )
      .then(() => {
        res.json({
          success: true,
          code: 1,
          message: 'üòä Ï¶êÍ≤®Ï∞æÍ∏∞ÏóêÏÑú Ìï¥Îãπ Í≤åÏãúÎ¨ºÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.',
        });
      }),
  ).then(() => {
    info('[DELETE, DELETE /api/user/favorite] Ïú†Ï†Ä Ï¶êÍ≤®Ï∞æÍ∏∞ ÏÇ≠Ï†ú');
  });
});

module.exports = router;
